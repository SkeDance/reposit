
counter till 99.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000354  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  000003c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008eb  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007f9  00000000  00000000  00000d5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000452  00000000  00000000  00001558  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c8  00000000  00000000  000019ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040f  00000000  00000000  00001a74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000317  00000000  00000000  00001e83  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000219a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
   6:	00 00       	nop
   8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
   a:	00 00       	nop
   c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
   e:	00 00       	nop
  10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
  12:	00 00       	nop
  14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
  16:	00 00       	nop
  18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
  22:	00 00       	nop
  24:	13 c1       	rjmp	.+550    	; 0x24c <__vector_9>
  26:	00 00       	nop
  28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	51 c0       	rjmp	.+162    	; 0xd4 <__bad_interrupt>
  32:	00 00       	nop
  34:	4f c0       	rjmp	.+158    	; 0xd4 <__bad_interrupt>
  36:	00 00       	nop
  38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	cf c0       	rjmp	.+414    	; 0x1dc <__vector_15>
  3e:	00 00       	nop
  40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
  42:	00 00       	nop
  44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
  46:	00 00       	nop
  48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
  52:	00 00       	nop
  54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
  56:	00 00       	nop
  58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
  62:	00 00       	nop
  64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
  66:	00 00       	nop
  68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	31 c0       	rjmp	.+98     	; 0xd4 <__bad_interrupt>
  72:	00 00       	nop
  74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
  76:	00 00       	nop
  78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
  82:	00 00       	nop
  84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
  86:	00 00       	nop
  88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	75 00       	.word	0x0075	; ????
  8e:	7a 00       	.word	0x007a	; ????
  90:	7e 00       	.word	0x007e	; ????
  92:	83 00       	.word	0x0083	; ????
  94:	88 00       	.word	0x0088	; ????
  96:	8d 00       	.word	0x008d	; ????
  98:	92 00       	.word	0x0092	; ????
  9a:	97 00       	.word	0x0097	; ????
  9c:	9b 00       	.word	0x009b	; ????
  9e:	a0 00       	.word	0x00a0	; ????
  a0:	af 00       	.word	0x00af	; ????
  a2:	b4 00       	.word	0x00b4	; ????
  a4:	b8 00       	.word	0x00b8	; ????
  a6:	bd 00       	.word	0x00bd	; ????
  a8:	c2 00       	.word	0x00c2	; ????
  aa:	c7 00       	.word	0x00c7	; ????
  ac:	cc 00       	.word	0x00cc	; ????
  ae:	d1 00       	.word	0x00d1	; ????
  b0:	d5 00       	.word	0x00d5	; ????
  b2:	da 00       	.word	0x00da	; ????

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d0 e1       	ldi	r29, 0x10	; 16
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a6 30       	cpi	r26, 0x06	; 6
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	76 d0       	rcall	.+236    	; 0x1be <main>
  d2:	3e c1       	rjmp	.+636    	; 0x350 <_exit>

000000d4 <__bad_interrupt>:
  d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <count0>:
	volatile static int t = 0;

void count0 (int t){
	
	int data2 = t % 10; // единицы
	switch (data2){
  d6:	6a e0       	ldi	r22, 0x0A	; 10
  d8:	70 e0       	ldi	r23, 0x00	; 0
  da:	0a d1       	rcall	.+532    	; 0x2f0 <__divmodhi4>
  dc:	8a 30       	cpi	r24, 0x0A	; 10
  de:	91 05       	cpc	r25, r1
  e0:	98 f5       	brcc	.+102    	; 0x148 <count0+0x72>
  e2:	fc 01       	movw	r30, r24
  e4:	ea 5b       	subi	r30, 0xBA	; 186
  e6:	ff 4f       	sbci	r31, 0xFF	; 255
  e8:	16 c1       	rjmp	.+556    	; 0x316 <__tablejump2__>
		case 0:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2); 
  ea:	87 e0       	ldi	r24, 0x07	; 7
  ec:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (1 << 2) | (1 << 3) | (0 << 5); //0
  ee:	8c e4       	ldi	r24, 0x4C	; 76
  f0:	88 bb       	out	0x18, r24	; 24
			break;
  f2:	08 95       	ret
		}
		case 1:{
			PORTE = (0 << 1) | (1 << 0) | (1 << 2);
  f4:	85 e0       	ldi	r24, 0x05	; 5
  f6:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (0 << 2) | (0 << 3) | (0 << 5); //1
  f8:	18 ba       	out	0x18, r1	; 24
			break;
  fa:	08 95       	ret
		}
		case 2:{
			PORTE = (1 << 1) | (1 << 0) | (0 << 2); 
  fc:	83 e0       	ldi	r24, 0x03	; 3
  fe:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (1 << 2) | (1 << 3) | (1 << 5); //2 
 100:	8c e2       	ldi	r24, 0x2C	; 44
 102:	88 bb       	out	0x18, r24	; 24
			break;
 104:	08 95       	ret
		}
		case 3:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2); 
 106:	87 e0       	ldi	r24, 0x07	; 7
 108:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (0 << 2) | (1 << 3) | (1 << 5); //3
 10a:	88 e2       	ldi	r24, 0x28	; 40
 10c:	88 bb       	out	0x18, r24	; 24
			break;
 10e:	08 95       	ret
		}
		case 4:{
			PORTE = (0 << 1) | (1 << 0) | (1 << 2);
 110:	85 e0       	ldi	r24, 0x05	; 5
 112:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (0 << 2) | (0 << 3) | (1 << 5); //4
 114:	80 e6       	ldi	r24, 0x60	; 96
 116:	88 bb       	out	0x18, r24	; 24
			break;
 118:	08 95       	ret
		}
		case 5:{
			PORTE = (1 << 1) | (0 << 0) | (1 << 2); 
 11a:	86 e0       	ldi	r24, 0x06	; 6
 11c:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (0 << 2) | (1 << 3) | (1 << 5); //5
 11e:	88 e6       	ldi	r24, 0x68	; 104
 120:	88 bb       	out	0x18, r24	; 24
			break;
 122:	08 95       	ret
		}
		case 6:{
			PORTE = (1 << 1) | (0 << 0) | (1 << 2); 
 124:	86 e0       	ldi	r24, 0x06	; 6
 126:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (1 << 2) | (1 << 3) | (1 << 5); //6
 128:	8c e6       	ldi	r24, 0x6C	; 108
 12a:	88 bb       	out	0x18, r24	; 24
			break;
 12c:	08 95       	ret
		}
		case 7:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2); 
 12e:	87 e0       	ldi	r24, 0x07	; 7
 130:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (0 << 2) | (0 << 3) | (0 << 5); //7
 132:	18 ba       	out	0x18, r1	; 24
			break;
 134:	08 95       	ret
		}
		case 8:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2); 
 136:	87 e0       	ldi	r24, 0x07	; 7
 138:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (1 << 2) | (1 << 3) | (1 << 5); //8
 13a:	8c e6       	ldi	r24, 0x6C	; 108
 13c:	88 bb       	out	0x18, r24	; 24
			break;
 13e:	08 95       	ret
		}
		case 9:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2); 
 140:	87 e0       	ldi	r24, 0x07	; 7
 142:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (0 << 2) | (1 << 3) | (1 << 5); //9
 144:	88 e6       	ldi	r24, 0x68	; 104
 146:	88 bb       	out	0x18, r24	; 24
 148:	08 95       	ret

0000014a <count00>:
	}	
}

void count00 (int t){
	int data1 = t / 10; // десятки
	switch (data1){
 14a:	6a e0       	ldi	r22, 0x0A	; 10
 14c:	70 e0       	ldi	r23, 0x00	; 0
 14e:	d0 d0       	rcall	.+416    	; 0x2f0 <__divmodhi4>
 150:	6a 30       	cpi	r22, 0x0A	; 10
 152:	71 05       	cpc	r23, r1
 154:	98 f5       	brcc	.+102    	; 0x1bc <count00+0x72>
 156:	fb 01       	movw	r30, r22
 158:	e0 5b       	subi	r30, 0xB0	; 176
 15a:	ff 4f       	sbci	r31, 0xFF	; 255
 15c:	dc c0       	rjmp	.+440    	; 0x316 <__tablejump2__>
		case 0:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2);
 15e:	87 e0       	ldi	r24, 0x07	; 7
 160:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (1 << 2) | (1 << 3) | (0 << 5); //0
 162:	8c e4       	ldi	r24, 0x4C	; 76
 164:	88 bb       	out	0x18, r24	; 24
			break;
 166:	08 95       	ret
		}
		case 1:{
			PORTE = (0 << 1) | (1 << 0) | (1 << 2);
 168:	85 e0       	ldi	r24, 0x05	; 5
 16a:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (0 << 2) | (0 << 3) | (0 << 5); //1
 16c:	18 ba       	out	0x18, r1	; 24
			break;
 16e:	08 95       	ret
		}
		case 2:{
			PORTE = (1 << 1) | (1 << 0) | (0 << 2);
 170:	83 e0       	ldi	r24, 0x03	; 3
 172:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (1 << 2) | (1 << 3) | (1 << 5); //2
 174:	8c e2       	ldi	r24, 0x2C	; 44
 176:	88 bb       	out	0x18, r24	; 24
			break;
 178:	08 95       	ret
		}
		case 3:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2);
 17a:	87 e0       	ldi	r24, 0x07	; 7
 17c:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (0 << 2) | (1 << 3) | (1 << 5); //3
 17e:	88 e2       	ldi	r24, 0x28	; 40
 180:	88 bb       	out	0x18, r24	; 24
			break;
 182:	08 95       	ret
		}
		case 4:{
			PORTE = (0 << 1) | (1 << 0) | (1 << 2);
 184:	85 e0       	ldi	r24, 0x05	; 5
 186:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (0 << 2) | (0 << 3) | (1 << 5); //4
 188:	80 e6       	ldi	r24, 0x60	; 96
 18a:	88 bb       	out	0x18, r24	; 24
			break;
 18c:	08 95       	ret
		}
		case 5:{
			PORTE = (1 << 1) | (0 << 0) | (1 << 2);
 18e:	86 e0       	ldi	r24, 0x06	; 6
 190:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (0 << 2) | (1 << 3) | (1 << 5); //5
 192:	88 e6       	ldi	r24, 0x68	; 104
 194:	88 bb       	out	0x18, r24	; 24
			break;
 196:	08 95       	ret
		}
		case 6:{
			PORTE = (1 << 1) | (0 << 0) | (1 << 2);
 198:	86 e0       	ldi	r24, 0x06	; 6
 19a:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (1 << 2) | (1 << 3) | (1 << 5); //6
 19c:	8c e6       	ldi	r24, 0x6C	; 108
 19e:	88 bb       	out	0x18, r24	; 24
			break;
 1a0:	08 95       	ret
		}
		case 7:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2);
 1a2:	87 e0       	ldi	r24, 0x07	; 7
 1a4:	83 b9       	out	0x03, r24	; 3
			PORTB = (0 << 6) | (0 << 2) | (0 << 3) | (0 << 5); //7
 1a6:	18 ba       	out	0x18, r1	; 24
			break;
 1a8:	08 95       	ret
		}
		case 8:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2);
 1aa:	87 e0       	ldi	r24, 0x07	; 7
 1ac:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (1 << 2) | (1 << 3) | (1 << 5); //8
 1ae:	8c e6       	ldi	r24, 0x6C	; 108
 1b0:	88 bb       	out	0x18, r24	; 24
			break;
 1b2:	08 95       	ret
		}
		case 9:{
			PORTE = (1 << 1) | (1 << 0) | (1 << 2);
 1b4:	87 e0       	ldi	r24, 0x07	; 7
 1b6:	83 b9       	out	0x03, r24	; 3
			PORTB = (1 << 6) | (0 << 2) | (1 << 3) | (1 << 5); //9
 1b8:	88 e6       	ldi	r24, 0x68	; 104
 1ba:	88 bb       	out	0x18, r24	; 24
 1bc:	08 95       	ret

000001be <main>:
//  (1 << 7) 

int main(void)
{

	DDRE = (1 << DDE6) | (1 << DDE7) | (1 << DDE1) | (1 << DDE0) | (1 << DDE2) ;
 1be:	87 ec       	ldi	r24, 0xC7	; 199
 1c0:	82 b9       	out	0x02, r24	; 2
	DDRB = (1 << DDB6) | (1 << DDB2) | (1 << DDB3) | (1 << DDB5) | (1 << DDB0);
 1c2:	8d e6       	ldi	r24, 0x6D	; 109
 1c4:	87 bb       	out	0x17, r24	; 23
	
	TIMSK = (1 << OCIE2) | (1 << OCIE0);
 1c6:	82 e8       	ldi	r24, 0x82	; 130
 1c8:	87 bf       	out	0x37, r24	; 55
	

	// первый счётчик
	TCCR0 = (1 << CS00) | (1 << CS01) | (1 << CS02) |
 1ca:	8f e0       	ldi	r24, 0x0F	; 15
 1cc:	83 bf       	out	0x33, r24	; 51
	(0 << WGM00) | (1 << WGM01);
	OCR0 = 7;
 1ce:	87 e0       	ldi	r24, 0x07	; 7
 1d0:	81 bf       	out	0x31, r24	; 49

	
	// второй счётчик
	TCCR2 = (1 << CS20) | (0 << CS21) | (1 << CS22) |
 1d2:	9d e0       	ldi	r25, 0x0D	; 13
 1d4:	95 bd       	out	0x25, r25	; 37
	(0 << WGM20) | (1 << WGM21);
	OCR2 = 7;
 1d6:	83 bd       	out	0x23, r24	; 35


	sei();
 1d8:	78 94       	sei
 1da:	ff cf       	rjmp	.-2      	; 0x1da <main+0x1c>

000001dc <__vector_15>:
		
	}
}

ISR(TIMER0_COMP_vect)
{
 1dc:	1f 92       	push	r1
 1de:	0f 92       	push	r0
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	0f 92       	push	r0
 1e4:	11 24       	eor	r1, r1
 1e6:	2f 93       	push	r18
 1e8:	8f 93       	push	r24
 1ea:	9f 93       	push	r25
	z++;
 1ec:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <z>
 1f0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <z+0x1>
 1f4:	01 96       	adiw	r24, 0x01	; 1
 1f6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <z+0x1>
 1fa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <z>
	if (z == 2000){
 1fe:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <z>
 202:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <z+0x1>
 206:	80 3d       	cpi	r24, 0xD0	; 208
 208:	97 40       	sbci	r25, 0x07	; 7
 20a:	69 f4       	brne	.+26     	; 0x226 <__vector_15+0x4a>
		++t;
 20c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <t>
 210:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <t+0x1>
 214:	01 96       	adiw	r24, 0x01	; 1
 216:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <t+0x1>
 21a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <t>
		z = 0;
 21e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <z+0x1>
 222:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <z>
	}
	if (t == 100){
 226:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <t>
 22a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <t+0x1>
 22e:	84 36       	cpi	r24, 0x64	; 100
 230:	91 05       	cpc	r25, r1
 232:	21 f4       	brne	.+8      	; 0x23c <__vector_15+0x60>
		t = 0;
 234:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <t+0x1>
 238:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <t>
	}
	if (t == 100){
		t = 0;
	}
*/	
}
 23c:	9f 91       	pop	r25
 23e:	8f 91       	pop	r24
 240:	2f 91       	pop	r18
 242:	0f 90       	pop	r0
 244:	0f be       	out	0x3f, r0	; 63
 246:	0f 90       	pop	r0
 248:	1f 90       	pop	r1
 24a:	18 95       	reti

0000024c <__vector_9>:


ISR(TIMER2_COMP_vect)
{
 24c:	1f 92       	push	r1
 24e:	0f 92       	push	r0
 250:	0f b6       	in	r0, 0x3f	; 63
 252:	0f 92       	push	r0
 254:	11 24       	eor	r1, r1
 256:	0b b6       	in	r0, 0x3b	; 59
 258:	0f 92       	push	r0
 25a:	2f 93       	push	r18
 25c:	3f 93       	push	r19
 25e:	4f 93       	push	r20
 260:	5f 93       	push	r21
 262:	6f 93       	push	r22
 264:	7f 93       	push	r23
 266:	8f 93       	push	r24
 268:	9f 93       	push	r25
 26a:	af 93       	push	r26
 26c:	bf 93       	push	r27
 26e:	ef 93       	push	r30
 270:	ff 93       	push	r31
	static int m = 0;
	PORTE &=~ ((1<<7)|(1<<6));
 272:	83 b1       	in	r24, 0x03	; 3
 274:	8f 73       	andi	r24, 0x3F	; 63
 276:	83 b9       	out	0x03, r24	; 3
	if (m == 0){
 278:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 27c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 280:	89 2b       	or	r24, r25
 282:	31 f4       	brne	.+12     	; 0x290 <__vector_9+0x44>
		count0(t);
 284:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <t>
 288:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <t+0x1>
 28c:	24 df       	rcall	.-440    	; 0xd6 <count0>
		PORTE |=(1<<6);
 28e:	1e 9a       	sbi	0x03, 6	; 3
	}
	if (m == 1){
 290:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 294:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 298:	01 97       	sbiw	r24, 0x01	; 1
 29a:	31 f4       	brne	.+12     	; 0x2a8 <__vector_9+0x5c>
		count00(t);
 29c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <t>
 2a0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <t+0x1>
 2a4:	52 df       	rcall	.-348    	; 0x14a <count00>
		PORTE |=(1<<7);
 2a6:	1f 9a       	sbi	0x03, 7	; 3
	}
	m++;
 2a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2ac:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 2b0:	01 96       	adiw	r24, 0x01	; 1
	if (m == 2){
 2b2:	82 30       	cpi	r24, 0x02	; 2
 2b4:	91 05       	cpc	r25, r1
 2b6:	29 f0       	breq	.+10     	; 0x2c2 <__vector_9+0x76>
	}
	if (m == 1){
		count00(t);
		PORTE |=(1<<7);
	}
	m++;
 2b8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 2bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 2c0:	04 c0       	rjmp	.+8      	; 0x2ca <__vector_9+0x7e>
	if (m == 2){
		m = 0;
 2c2:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 2c6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	flag = !flag;
//	(flag) ? (PORTE |= (1 << 7)) : (PORTE &= ~(0 << 7));
	(flag) ? (PORTE |= (1 << 6)) : (PORTE &= ~(0 << 6));
*/

}
 2ca:	ff 91       	pop	r31
 2cc:	ef 91       	pop	r30
 2ce:	bf 91       	pop	r27
 2d0:	af 91       	pop	r26
 2d2:	9f 91       	pop	r25
 2d4:	8f 91       	pop	r24
 2d6:	7f 91       	pop	r23
 2d8:	6f 91       	pop	r22
 2da:	5f 91       	pop	r21
 2dc:	4f 91       	pop	r20
 2de:	3f 91       	pop	r19
 2e0:	2f 91       	pop	r18
 2e2:	0f 90       	pop	r0
 2e4:	0b be       	out	0x3b, r0	; 59
 2e6:	0f 90       	pop	r0
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <__divmodhi4>:
 2f0:	97 fb       	bst	r25, 7
 2f2:	07 2e       	mov	r0, r23
 2f4:	16 f4       	brtc	.+4      	; 0x2fa <__divmodhi4+0xa>
 2f6:	00 94       	com	r0
 2f8:	06 d0       	rcall	.+12     	; 0x306 <__divmodhi4_neg1>
 2fa:	77 fd       	sbrc	r23, 7
 2fc:	08 d0       	rcall	.+16     	; 0x30e <__divmodhi4_neg2>
 2fe:	14 d0       	rcall	.+40     	; 0x328 <__udivmodhi4>
 300:	07 fc       	sbrc	r0, 7
 302:	05 d0       	rcall	.+10     	; 0x30e <__divmodhi4_neg2>
 304:	3e f4       	brtc	.+14     	; 0x314 <__divmodhi4_exit>

00000306 <__divmodhi4_neg1>:
 306:	90 95       	com	r25
 308:	81 95       	neg	r24
 30a:	9f 4f       	sbci	r25, 0xFF	; 255
 30c:	08 95       	ret

0000030e <__divmodhi4_neg2>:
 30e:	70 95       	com	r23
 310:	61 95       	neg	r22
 312:	7f 4f       	sbci	r23, 0xFF	; 255

00000314 <__divmodhi4_exit>:
 314:	08 95       	ret

00000316 <__tablejump2__>:
 316:	ee 0f       	add	r30, r30
 318:	ff 1f       	adc	r31, r31
 31a:	00 24       	eor	r0, r0
 31c:	00 1c       	adc	r0, r0
 31e:	0b be       	out	0x3b, r0	; 59
 320:	07 90       	elpm	r0, Z+
 322:	f6 91       	elpm	r31, Z
 324:	e0 2d       	mov	r30, r0
 326:	09 94       	ijmp

00000328 <__udivmodhi4>:
 328:	aa 1b       	sub	r26, r26
 32a:	bb 1b       	sub	r27, r27
 32c:	51 e1       	ldi	r21, 0x11	; 17
 32e:	07 c0       	rjmp	.+14     	; 0x33e <__udivmodhi4_ep>

00000330 <__udivmodhi4_loop>:
 330:	aa 1f       	adc	r26, r26
 332:	bb 1f       	adc	r27, r27
 334:	a6 17       	cp	r26, r22
 336:	b7 07       	cpc	r27, r23
 338:	10 f0       	brcs	.+4      	; 0x33e <__udivmodhi4_ep>
 33a:	a6 1b       	sub	r26, r22
 33c:	b7 0b       	sbc	r27, r23

0000033e <__udivmodhi4_ep>:
 33e:	88 1f       	adc	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	5a 95       	dec	r21
 344:	a9 f7       	brne	.-22     	; 0x330 <__udivmodhi4_loop>
 346:	80 95       	com	r24
 348:	90 95       	com	r25
 34a:	bc 01       	movw	r22, r24
 34c:	cd 01       	movw	r24, r26
 34e:	08 95       	ret

00000350 <_exit>:
 350:	f8 94       	cli

00000352 <__stop_program>:
 352:	ff cf       	rjmp	.-2      	; 0x352 <__stop_program>
